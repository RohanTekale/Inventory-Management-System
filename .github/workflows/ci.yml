name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: inventory_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git gcc g++ build-essential libpq-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test database and Redis connectivity
        run: |
          psql "postgres://postgres:postgres@postgres:5432/inventory_db" -c "SELECT 1"
          redis-cli -h redis -p 6379 ping

      - name: Run linting
        run: flake8 . --config=.flake8

      - name: Set up environment variables
        run: |
          echo "DJANGO_SETTINGS_MODULE=inventory_management.settings" >> $GITHUB_ENV
          echo "DATABASE_URL=postgres://postgres:postgres@postgres:5432/inventory_db" >> $GITHUB_ENV
          echo "CELERY_BROKER_URL=redis://redis:6379/0" >> $GITHUB_ENV
          echo "REDIS_URL=redis://redis:6379/1" >> $GITHUB_ENV
          echo "SECRET_KEY=django-insecure-test-key" >> $GITHUB_ENV
          echo "DEBUG=True" >> $GITHUB_ENV

      - name: Run migrations
        run: python manage.py migrate

      - name: Run tests
        run: pytest --ds=inventory_management.settings

      - name: Build Docker image
        run: docker build -t inventory-management-backend:latest .

      # Optional: Push Docker image to a registry (uncomment when ready for deployment)
      # - name: Log in to Docker Hub
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #
      # - name: Push Docker image
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   run: |
      #     docker tag inventory-management-backend:latest myusername/inventory-management-backend:${{ github.sha }}
      #     docker push myusername/inventory-management-backend:${{ github.sha }}
      